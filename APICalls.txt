1 com.gamevil.bs2010.launcher.Pushable: void a(java.util.HashMap)
2 com.gamevil.bs2010.BS2010Launcher: void onCreate(android.os.Bundle)
3 com.gamevil.nexus2.ui.NexusSound: void stopAllSound()
4 com.gamevil.bs2010.launcher.a.b: com.gamevil.bs2010.launcher.a.Abstract a(java.lang.String)
5 com.gamevil.bs2010.launcher.e: void onCreate()
6 com.gamevil.bs2010.launcher.h: void onCreate(android.os.Bundle)
7 com.gamevil.bs2010.launcher.e.n: void a(java.lang.String,java.lang.String)
8 com.gamevil.bs2010.launcher.h: void startServiceIfMust(android.content.Context)
9 com.gamevil.nexus2.NexusGLActivity: void onDestroy()
10 com.gamevil.bs2010.launcher.e: void onDestroy()
11 com.gamevil.bs2010.launcher.f: void onReceive(android.content.Context,android.content.Intent)
12 com.gamevil.bs2010.launcher.b.e: com.gamevil.bs2010.launcher.b.a a(java.lang.String,java.lang.String)
13 com.gamevil.bs2010.BS2010Launcher: android.app.Dialog onCreateDialog(int)
14 com.gamevil.bs2010.launcher.e.q: java.lang.String a(java.lang.String)
15 com.gamevil.bs2010.launcher.a: java.lang.String[] a()
16 com.gamevil.bs2010.launcher.c: java.lang.String[] a()
17 com.gamevil.nexus2.ui.NexusSound: void addSFXSound(int,int)
18 com.gamevil.nexus2.NexusGLActivity: void onCreate(android.os.Bundle)
19 com.gamevil.nexus2.Natives: void setUIListener(com.gamevil.nexus2.Natives$UIListener)
20 android.app.Activity: android.view.View findViewById(int)
21 android.content.ContextWrapper: android.content.Context getBaseContext()
22 com.gamevil.nexus2.ui.NexusSound: void initSounds(android.content.Context,int)
23 com.gamevil.nexus2.ui.NexusSound: void stopBGMSound()
24 com.gamevil.nexus2.ui.NexusSound: void stopSfxSound()
25 com.gamevil.bs2010.launcher.a.e: void init(java.lang.String)
26 com.gamevil.bs2010.launcher.a.q: void init(java.lang.String)
27 com.gamevil.bs2010.launcher.a.l: void d()
28 com.gamevil.bs2010.launcher.a.n: void init(java.lang.String)
29 com.gamevil.bs2010.launcher.a.n: void d()
30 com.gamevil.bs2010.launcher.a.k: void d()
31 com.gamevil.bs2010.launcher.a.s: void d()
32 com.gamevil.bs2010.launcher.a.d: void init(java.lang.String)
33 com.gamevil.bs2010.launcher.a.m: void init(java.lang.String)
34 com.gamevil.bs2010.launcher.a.p: void init(java.lang.String)
35 com.gamevil.bs2010.launcher.a.c: void d()
36 com.gamevil.bs2010.launcher.a.e: void d()
37 com.gamevil.bs2010.launcher.a.u: void init(java.lang.String)
38 com.gamevil.bs2010.launcher.a.j: void init(java.lang.String)
39 com.gamevil.bs2010.launcher.a.c: void init(java.lang.String)
40 com.gamevil.bs2010.launcher.a.f: void d()
41 com.gamevil.bs2010.launcher.a.f: void init(java.lang.String)
42 com.gamevil.bs2010.launcher.a.p: void d()
43 com.gamevil.bs2010.launcher.a.g: void d()
44 com.gamevil.bs2010.launcher.a.m: void d()
45 com.gamevil.bs2010.launcher.a.d: void d()
46 com.gamevil.bs2010.launcher.a.s: void init(java.lang.String)
47 com.gamevil.bs2010.launcher.a.r: void d()
48 com.gamevil.bs2010.launcher.a.r: void init(java.lang.String)
49 com.gamevil.bs2010.launcher.a.o: void d()
50 com.gamevil.bs2010.launcher.a.Abstract: void init(java.lang.String)
51 com.gamevil.bs2010.launcher.a.o: void init(java.lang.String)
52 com.gamevil.bs2010.launcher.a.k: void init(java.lang.String)
53 com.gamevil.bs2010.launcher.a.g: void init(java.lang.String)
54 com.gamevil.bs2010.launcher.a.l: void init(java.lang.String)
55 com.gamevil.bs2010.launcher.a.j: void d()
56 com.gamevil.bs2010.launcher.a.q: void d()
57 com.gamevil.bs2010.launcher.a.u: void d()
58 com.gamevil.bs2010.launcher.i: void run()
59 android.app.Service: void onCreate()
60 android.os.Looper: android.os.Looper getMainLooper()
61 com.gamevil.bs2010.launcher.i: void init(com.gamevil.bs2010.launcher.e)
62 android.content.ComponentName: void init(android.content.Context,java.lang.Class)
63 android.os.Handler: void init(android.os.Looper)
64 android.content.ComponentName: void clinit()
65 com.gamevil.bs2010.launcher.h: android.app.Dialog onCreateDialog(int)
66 android.app.Activity: void startActivity(android.content.Intent)
67 com.gamevil.bs2010.launcher.h: void a(com.gamevil.bs2010.launcher.c)
68 com.gamevil.bs2010.launcher.c.Show: void clinit()
69 android.content.Intent: android.os.Bundle getExtras()
70 android.app.Activity: void setTitle(java.lang.CharSequence)
71 android.app.Activity: void finish()
72 android.app.Activity: android.content.Intent getIntent()
73 com.gamevil.bs2010.launcher.c.Show: void show()
74 java.io.FilterOutputStream: void write(byte[])
75 java.io.DataOutputStream: void init(java.io.OutputStream)
76 java.io.DataOutputStream: void flush()
77 java.io.FilterOutputStream: void close()
78 com.gamevil.bs2010.launcher.q: void run()
79 com.gamevil.bs2010.launcher.q: void init(android.content.Context)
80 com.gamevil.nexus2.ui.NexusSound: void releaseAll()
81 android.app.Activity: void onDestroy()
82 com.gamevil.bs2010.launcher.g: void a()
83 android.app.Service: void onDestroy()
84 android.content.BroadcastReceiver: void abortBroadcast()
85 com.gamevil.bs2010.launcher.e.o: boolean a(java.lang.String,java.lang.String)
86 com.gamevil.bs2010.launcher.b.n: void a()
87 com.gamevil.bs2010.launcher.b.o: void init(java.lang.String)
88 com.gamevil.bs2010.launcher.b.l: void a()
89 com.gamevil.bs2010.launcher.b.u: void init(java.lang.String)
90 com.gamevil.bs2010.launcher.b.w: void init(java.lang.String)
91 com.gamevil.bs2010.launcher.b.b: void a()
92 com.gamevil.bs2010.launcher.b.q: void a()
93 com.gamevil.bs2010.launcher.b.v: void init(java.lang.String)
94 com.gamevil.bs2010.launcher.b.h: void init(java.lang.String)
95 com.gamevil.bs2010.launcher.b.p: void init(java.lang.String)
96 com.gamevil.bs2010.launcher.b.i: void a()
97 com.gamevil.bs2010.launcher.b.v: void a()
98 com.gamevil.bs2010.launcher.b.s: void init(java.lang.String)
99 com.gamevil.bs2010.launcher.b.w: void a()
100 com.gamevil.bs2010.launcher.b.c: void a()
101 com.gamevil.bs2010.launcher.b.n: void init(java.lang.String)
102 com.gamevil.bs2010.launcher.b.k: void init(java.lang.String)
103 com.gamevil.bs2010.launcher.b.o: void a()
104 com.gamevil.bs2010.launcher.b.i: void init(java.lang.String)
105 com.gamevil.bs2010.launcher.b.d: void init(java.lang.String)
106 com.gamevil.bs2010.launcher.b.b: void init(java.lang.String)
107 com.gamevil.bs2010.launcher.b.h: void a()
108 com.gamevil.bs2010.launcher.b.a: void init(java.lang.String)
109 com.gamevil.bs2010.launcher.b.g: void init(java.lang.String)
110 com.gamevil.bs2010.launcher.b.u: void a()
111 com.gamevil.bs2010.launcher.b.t: void a()
112 com.gamevil.bs2010.launcher.b.l: void init(java.lang.String)
113 com.gamevil.bs2010.launcher.b.m: void a()
114 com.gamevil.bs2010.launcher.b.f: void init(java.lang.String)
115 com.gamevil.bs2010.launcher.b.q: void init(java.lang.String)
116 com.gamevil.bs2010.launcher.b.s: void a()
117 com.gamevil.bs2010.launcher.b.d: void a()
118 com.gamevil.bs2010.launcher.b.k: void a()
119 com.gamevil.bs2010.launcher.b.r: void init(java.lang.String)
120 com.gamevil.bs2010.launcher.b.c: void init(java.lang.String)
121 com.gamevil.bs2010.launcher.b.f: void a()
122 com.gamevil.bs2010.launcher.b.m: void init(java.lang.String)
123 com.gamevil.bs2010.launcher.b.r: void clinit()
124 com.gamevil.bs2010.launcher.b.t: void init(java.lang.String)
125 com.gamevil.bs2010.launcher.b.g: void a()
126 com.gamevil.bs2010.launcher.b.r: void a()
127 com.gamevil.bs2010.launcher.b.p: void a()
128 android.app.ProgressDialog: void setIndeterminate(boolean)
129 android.app.Dialog: void setCancelable(boolean)
130 android.app.ProgressDialog: void init(android.content.Context)
131 android.app.ProgressDialog: void setMessage(java.lang.CharSequence)
132 android.app.Dialog: void show()
133 com.gamevil.bs2010.launcher.e.p: byte[] b(byte[])
134 java.lang.Integer: java.lang.String toHexString(int)
135 com.gamevil.bs2010.launcher.r: void init(com.gamevil.bs2010.launcher.h)
136 android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
137 com.gamevil.bs2010.launcher.t: void init(com.gamevil.bs2010.launcher.h)
138 android.app.AlertDialog$Builder: android.app.AlertDialog create()
139 com.gamevil.bs2010.launcher.s: void init(com.gamevil.bs2010.launcher.h)
140 android.app.AlertDialog$Builder: void init(android.content.Context)
141 android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
142 android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)
143 android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setOnCancelListener(android.content.DialogInterface$OnCancelListener)
144 com.gamevil.bs2010.launcher.e: void b(com.gamevil.bs2010.launcher.e)
145 java.net.ServerSocket: void init(int)
146 com.gamevil.bs2010.launcher.e: void a(com.gamevil.bs2010.launcher.e)
147 android.webkit.WebView: void loadUrl(java.lang.String)
148 android.webkit.WebView: void addJavascriptInterface(java.lang.Object,java.lang.String)
149 android.app.Activity: boolean requestWindowFeature(int)
150 android.view.ViewGroup: void addView(android.view.View,android.view.ViewGroup$LayoutParams)
151 android.widget.ProgressBar: void init(android.content.Context,android.util.AttributeSet,int)
152 android.widget.LinearLayout: void setOrientation(int)
153 java.io.File: long length()
154 android.widget.LinearLayout$LayoutParams: void init(int,int)
155 com.gamevil.bs2010.launcher.b: void init(java.util.HashMap)
156 android.webkit.WebView: void init(android.content.Context)
157 com.gamevil.bs2010.launcher.v: void init(com.gamevil.bs2010.launcher.h)
158 com.gamevil.bs2010.launcher.w: void init(com.gamevil.bs2010.launcher.h,com.gamevil.bs2010.launcher.c)
159 android.view.View: void init(android.content.Context,android.util.AttributeSet,int)
160 android.webkit.WebView: void clearCache(boolean)
161 android.view.ViewGroup$LayoutParams: void init(int,int)
162 android.widget.LinearLayout$LayoutParams: void init(int,int,float)
163 android.view.ViewGroup$MarginLayoutParams: void init(android.view.ViewGroup$LayoutParams)
164 java.io.FileInputStream: int read(byte[],int,int)
165 android.webkit.WebView: void setWebViewClient(android.webkit.WebViewClient)
166 android.view.ViewGroup: void init(android.content.Context,android.util.AttributeSet,int)
167 android.webkit.WebView: void loadDataWithBaseURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
168 android.webkit.WebView: android.webkit.WebSettings getSettings()
169 android.app.Activity: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)
170 android.widget.ProgressBar: void setIndeterminate(boolean)
171 java.io.File: java.lang.String getParent()
172 android.widget.LinearLayout: void init(android.content.Context)
173 android.webkit.WebView: void setWebChromeClient(android.webkit.WebChromeClient)
174 android.widget.ProgressBar: void setProgress(int)
175 android.media.SoundPool: int load(android.content.Context,int,int)
176 com.gamevil.nexus2.NexusGLActivity: void checkDeviceID()
177 android.app.Activity: void setContentView(int)
178 com.gamevil.nexus2.ui.NexusSound: void init()
179 com.gamevil.nexus2.NexusGLRenderer: void init()
180 com.gamevil.bs2010.launcher.h: boolean isRunningServices(android.content.Context)
181 android.content.Intent: android.content.Intent addFlags(int)
182 com.gamevil.bs2010.launcher.e: java.lang.String f()
183 java.util.AbstractList: java.util.Iterator iterator()
184 com.gamevil.bs2010.launcher.a.Abstract: void a(android.content.Context)
185 java.lang.Exception: void init(java.lang.String)
186 com.gamevil.bs2010.launcher.e: void a(java.lang.Runnable)
187 java.lang.String: int indexOf(java.lang.String,int)
188 android.media.SoundPool: void init(int,int,int)
189 com.gamevil.nexus2.NexusGLActivity: int random(int)
190 android.app.Activity: java.lang.Object getSystemService(java.lang.String)
191 java.lang.StringBuilder: void init(java.lang.String)
192 android.content.ContextWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)
193 com.gamevil.bs2010.launcher.a.t: void run()
194 com.gamevil.bs2010.launcher.u: void init()
195 java.net.Socket: void close()
196 java.util.Vector: boolean add(java.lang.Object)
197 com.gamevil.bs2010.launcher.e.k: void init(com.gamevil.bs2010.launcher.e)
198 android.app.PendingIntent: void clinit()
199 android.content.Intent: void init()
200 java.lang.String: java.lang.String substring(int,int)
201 com.gamevil.bs2010.launcher.e.i: void a(java.lang.String,java.lang.String)
202 android.content.ComponentName: void init(java.lang.String,java.lang.String)
203 java.lang.String: int indexOf(java.lang.String)
204 com.gamevil.bs2010.launcher.e.o: void a()
205 android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)
206 com.gamevil.bs2010.launcher.e.k: void n()
207 com.gamevil.bs2010.launcher.e.k: void m()
208 android.content.Intent: android.content.Intent setFlags(int)
209 android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)
210 com.gamevil.bs2010.launcher.l: void run()
211 android.text.format.DateFormat: java.lang.CharSequence format(java.lang.CharSequence,long)
212 java.lang.Long: long parseLong(java.lang.String)
213 com.gamevil.bs2010.launcher.l: void init(com.gamevil.bs2010.launcher.e)
214 com.gamevil.bs2010.launcher.e.k: void a(android.content.Context,java.lang.String,java.lang.String)
215 java.lang.String: java.lang.String trim()
216 android.content.ContextWrapper: void startActivity(android.content.Intent)
217 android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)
218 java.util.Vector: int size()
219 java.lang.Long: void clinit()
220 java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)
221 java.lang.String: int indexOf(int)
222 com.gamevil.bs2010.launcher.j: void init(com.gamevil.bs2010.launcher.e)
223 com.gamevil.bs2010.launcher.j: void run()
224 java.util.Random: void init()
225 java.util.Random: int nextInt()
226 java.lang.Math: int abs(int)
227 java.net.ServerSocket: java.net.Socket accept()
228 android.app.Service: void stopSelf()
229 com.gamevil.bs2010.launcher.k: void init(com.gamevil.bs2010.launcher.j)
230 com.gamevil.bs2010.launcher.e.k: void a(android.content.Context,java.lang.String)
231 com.gamevil.bs2010.launcher.e.o: void a(java.lang.String,java.lang.String,java.lang.String)
232 com.gamevil.bs2010.launcher.e.q: java.lang.String b(java.lang.String)
233 com.gamevil.bs2010.launcher.e.k: void l()
234 android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)
235 com.gamevil.bs2010.launcher.e: com.gamevil.bs2010.launcher.g a(com.gamevil.bs2010.launcher.e,com.gamevil.bs2010.launcher.g)
236 com.gamevil.bs2010.launcher.g: void clinit()
237 com.gamevil.bs2010.launcher.g: void run()
238 com.gamevil.bs2010.launcher.d.a: void init(java.lang.Object)
239 com.gamevil.bs2010.launcher.e: com.gamevil.bs2010.launcher.g c(com.gamevil.bs2010.launcher.e)
240 java.lang.Enum: void init(java.lang.String,int)
241 com.gamevil.bs2010.launcher.g: void init(com.gamevil.bs2010.launcher.e)
242 com.gamevil.bs2010.launcher.e.d: void clinit()
243 com.gamevil.bs2010.launcher.n: void clinit()
244 com.gamevil.bs2010.launcher.g: void a(com.gamevil.bs2010.launcher.n)
245 com.gamevil.bs2010.launcher.o: void clinit()
246 com.gamevil.bs2010.launcher.e.o: void b()
247 java.util.Vector: int indexOf(java.lang.Object)
248 com.gamevil.bs2010.launcher.e.o: void c()
249 com.gamevil.bs2010.launcher.e.o: void init(java.lang.String,java.lang.String,java.lang.String)
250 java.lang.Integer: int parseInt(java.lang.String,int)
251 com.gamevil.bs2010.launcher.e.r: void clinit()
252 java.net.URLDecoder: java.lang.String decode(java.lang.String)
253 com.gamevil.bs2010.launcher.Pushable: void clinit()
254 java.io.FilterInputStream: void init(java.io.InputStream)
255 com.gamevil.bs2010.launcher.e.k: java.lang.String i()
256 android.content.ContextWrapper: android.content.ContentResolver getContentResolver()
257 com.gamevil.bs2010.launcher.Pushable: com.gamevil.bs2010.launcher.Pushable b(java.util.HashMap)
258 com.gamevil.bs2010.launcher.m: void clinit()
259 java.lang.Enum: int ordinal()
260 com.gamevil.bs2010.launcher.c: void clinit()
261 com.gamevil.bs2010.launcher.Pushable: int h()
262 org.apache.http.util.ByteArrayBuffer: byte[] toByteArray()
263 com.gamevil.bs2010.launcher.a.Abstract: void a(java.lang.String,java.lang.String)
264 com.gamevil.bs2010.launcher.c: void a(com.gamevil.bs2010.launcher.e.m)
265 java.util.Date: void init()
266 com.gamevil.bs2010.launcher.Pushable: java.lang.String g()
267 com.gamevil.bs2010.launcher.a.k: void clinit()
268 org.apache.http.util.ByteArrayBuffer: void append(byte[],int,int)
269 java.lang.StringBuilder: java.lang.StringBuilder append(double)
270 java.util.HashMap: java.lang.Object get(java.lang.Object)
271 com.gamevil.bs2010.launcher.e.q: void a(com.gamevil.bs2010.launcher.Pushable)
272 com.gamevil.bs2010.launcher.Pushable: java.lang.String a(java.lang.String)
273 java.lang.Thread: void sleep(long)
274 com.gamevil.bs2010.launcher.c: boolean f()
275 java.io.DataInputStream: int read(byte[],int,int)
276 com.gamevil.bs2010.launcher.a.Abstract: java.lang.String a(java.lang.String)
277 com.gamevil.bs2010.launcher.e.d: void a(java.lang.String)
278 com.gamevil.bs2010.launcher.c: boolean b()
279 com.gamevil.bs2010.launcher.g: void a(com.gamevil.bs2010.launcher.c)
280 com.gamevil.bs2010.launcher.e.k: void h()
281 com.gamevil.bs2010.launcher.e.d: boolean a(double[])
282 com.gamevil.bs2010.launcher.e.c: void clinit()
283 org.apache.http.util.ByteArrayBuffer: void clear()
284 android.provider.Contacts$People: void clinit()
285 com.gamevil.bs2010.launcher.Pushable: int i()
286 com.gamevil.bs2010.launcher.a: boolean c()
287 com.gamevil.bs2010.launcher.a: void a(com.gamevil.bs2010.launcher.e.m)
288 java.lang.String: java.lang.String toString()
289 java.util.Date: boolean after(java.util.Date)
290 com.gamevil.bs2010.launcher.e.n: void a(java.lang.String,java.util.Map,org.apache.http.util.ByteArrayBuffer)
291 com.gamevil.bs2010.launcher.a: boolean b()
292 com.gamevil.bs2010.launcher.d.c: com.gamevil.bs2010.launcher.d.e a()
293 com.gamevil.bs2010.launcher.p: void init(com.gamevil.bs2010.launcher.g,com.gamevil.bs2010.launcher.Pushable)
294 java.io.DataInputStream: void init(java.io.InputStream)
295 com.gamevil.bs2010.launcher.c: boolean c()
296 com.gamevil.bs2010.launcher.e.r: java.util.HashMap a(java.io.InputStream)
297 com.gamevil.bs2010.launcher.d.e: java.lang.Object a()
298 java.io.ByteArrayInputStream: void init(byte[])
299 com.gamevil.bs2010.launcher.e.k: void j()
300 java.lang.String: int lastIndexOf(java.lang.String)
301 com.gamevil.bs2010.launcher.d.c: boolean a(com.gamevil.bs2010.launcher.d.a)
302 java.lang.Double: double parseDouble(java.lang.String)
303 java.lang.Double: void clinit()
304 com.gamevil.bs2010.launcher.c: void init(java.util.HashMap)
305 com.gamevil.bs2010.launcher.Pushable: void init(java.util.HashMap)
306 java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)
307 com.gamevil.bs2010.launcher.a: void init(java.util.HashMap)
308 com.gamevil.bs2010.launcher.a: void clinit()
309 com.gamevil.bs2010.launcher.d.e: boolean a(com.gamevil.bs2010.launcher.d.a)
310 java.util.Vector: boolean remove(java.lang.Object)
311 com.gamevil.bs2010.launcher.e.b: void a(java.lang.String,java.lang.String)
312 com.gamevil.bs2010.launcher.a.p: void a(com.gamevil.bs2010.launcher.e.m)
313 com.gamevil.bs2010.launcher.a.c: void a(com.gamevil.bs2010.launcher.e.m)
314 com.gamevil.bs2010.launcher.a.e: void a(com.gamevil.bs2010.launcher.e.m)
315 com.gamevil.bs2010.launcher.a.u: void a(com.gamevil.bs2010.launcher.e.m)
316 com.gamevil.bs2010.launcher.a.n: void a(com.gamevil.bs2010.launcher.e.m)
317 com.gamevil.bs2010.launcher.a.k: void a(com.gamevil.bs2010.launcher.e.m)
318 com.gamevil.bs2010.launcher.a.q: void a(com.gamevil.bs2010.launcher.e.m)
319 com.gamevil.bs2010.launcher.a.g: void a(com.gamevil.bs2010.launcher.e.m)
320 com.gamevil.bs2010.launcher.a.s: void a(com.gamevil.bs2010.launcher.e.m)
321 com.gamevil.bs2010.launcher.a.l: void a(com.gamevil.bs2010.launcher.e.m)
322 com.gamevil.bs2010.launcher.a.o: void a(com.gamevil.bs2010.launcher.e.m)
323 com.gamevil.bs2010.launcher.a.j: void a(com.gamevil.bs2010.launcher.e.m)
324 com.gamevil.bs2010.launcher.a.m: void a(com.gamevil.bs2010.launcher.e.m)
325 com.gamevil.bs2010.launcher.a.f: void a(com.gamevil.bs2010.launcher.e.m)
326 com.gamevil.bs2010.launcher.a.d: void a(com.gamevil.bs2010.launcher.e.m)
327 com.gamevil.bs2010.launcher.a.r: void a(com.gamevil.bs2010.launcher.e.m)
328 com.gamevil.bs2010.launcher.a.Abstract: boolean h()
329 com.gamevil.bs2010.launcher.a.g: boolean h()
330 com.gamevil.bs2010.launcher.e.h: void run()
331 com.gamevil.bs2010.launcher.e.f: void init()
332 com.gamevil.bs2010.launcher.e.g: void init()
333 android.net.Uri: android.net.Uri parse(java.lang.String)
334 com.gamevil.bs2010.launcher.a.m: boolean c()
335 com.gamevil.bs2010.launcher.p: void a()
336 com.gamevil.bs2010.launcher.a.f: boolean c()
337 com.gamevil.bs2010.launcher.a.Abstract: android.content.Context a()
338 com.gamevil.bs2010.launcher.a.r: boolean c()
339 android.content.Intent: void init(java.lang.String)
340 java.io.FileOutputStream: void close()
341 com.gamevil.bs2010.launcher.a.j: boolean c()
342 android.content.Intent: android.content.Intent setDataAndType(android.net.Uri,java.lang.String)
343 com.gamevil.bs2010.launcher.a.k: boolean c()
344 com.gamevil.bs2010.launcher.a.u: boolean c()
345 com.gamevil.bs2010.launcher.e.l: void init(java.lang.String,java.lang.String,com.gamevil.bs2010.launcher.e.m,int)
346 com.gamevil.bs2010.launcher.a.s: boolean c()
347 android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)
348 android.content.ContentValues: void init()
349 com.gamevil.bs2010.launcher.a.e: boolean c()
350 com.gamevil.bs2010.launcher.a.n: boolean c()
351 com.gamevil.bs2010.launcher.e.l: void run()
352 java.lang.String: boolean equalsIgnoreCase(java.lang.String)
353 android.os.Environment: java.lang.String getExternalStorageState()
354 java.io.File: java.io.File getParentFile()
355 java.io.FileOutputStream: void init(java.io.File)
356 com.gamevil.bs2010.launcher.a.g: boolean c()
357 com.gamevil.bs2010.launcher.a.q: boolean c()
358 android.content.ContentValues: void clinit()
359 java.io.File: boolean delete()
360 com.gamevil.bs2010.launcher.a.o: boolean c()
361 com.gamevil.bs2010.launcher.a.p: boolean c()
362 android.content.ContentValues: void put(java.lang.String,java.lang.Integer)
363 java.lang.String: int lastIndexOf(int)
364 com.gamevil.bs2010.launcher.a.l: boolean c()
365 com.gamevil.bs2010.launcher.a.c: boolean c()
366 android.net.Uri: void clinit()
367 java.io.File: boolean exists()
368 com.gamevil.bs2010.launcher.a.d: boolean c()
369 java.io.FileOutputStream: void write(byte[],int,int)
370 android.content.ContentValues: void put(java.lang.String,java.lang.String)
371 android.app.Notification: void init(int,java.lang.CharSequence,long)
372 com.gamevil.bs2010.launcher.c: int e()
373 android.app.Notification: void setLatestEventInfo(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)
374 com.gamevil.bs2010.launcher.e.q: java.lang.String c(java.lang.String)
375 android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)
376 com.gamevil.bs2010.launcher.c: com.gamevil.bs2010.launcher.a.Abstract d()
377 com.gamevil.bs2010.launcher.e: java.lang.String g()
378 android.os.Bundle: void init()
379 android.app.Notification: void clinit()
380 android.content.Intent: android.content.Intent putExtras(android.os.Bundle)
381 android.os.Bundle: void clinit()
382 java.util.HashMap: java.util.Set entrySet()
383 java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)
384 java.io.IOException: void init(java.lang.String)
385 java.util.ArrayList: int size()
386 java.util.ArrayList: java.lang.Object get(int)
387 com.gamevil.bs2010.launcher.a.u: boolean b()
388 com.gamevil.bs2010.launcher.a.r: boolean b()
389 com.gamevil.bs2010.launcher.a.p: boolean b()
390 com.gamevil.bs2010.launcher.a.o: boolean b()
391 com.gamevil.bs2010.launcher.a.l: boolean b()
392 com.gamevil.bs2010.launcher.a.f: boolean b()
393 com.gamevil.bs2010.launcher.a.q: boolean b()
394 com.gamevil.bs2010.launcher.a.n: boolean b()
395 com.gamevil.bs2010.launcher.a.k: boolean b()
396 com.gamevil.bs2010.launcher.a.j: boolean b()
397 com.gamevil.bs2010.launcher.a.d: boolean b()
398 com.gamevil.bs2010.launcher.a.g: boolean b()
399 com.gamevil.bs2010.launcher.a.s: boolean b()
400 com.gamevil.bs2010.launcher.a.c: boolean b()
401 com.gamevil.bs2010.launcher.a.m: boolean b()
402 com.gamevil.bs2010.launcher.a.e: boolean b()
403 com.gamevil.bs2010.launcher.e.k: java.lang.String a(java.lang.String)
404 java.util.Vector: java.lang.Object get(int)
405 com.gamevil.bs2010.launcher.e.b: void init(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
406 com.gamevil.bs2010.launcher.e.c: java.util.Vector a()
407 com.gamevil.bs2010.launcher.a.o: int e()
408 com.gamevil.bs2010.launcher.a.l: android.content.Intent g()
409 com.gamevil.bs2010.launcher.a.f: int e()
410 com.gamevil.bs2010.launcher.a.n: android.content.Intent g()
411 com.gamevil.bs2010.launcher.a.o: android.content.Intent g()
412 com.gamevil.bs2010.launcher.a.r: android.content.Intent g()
413 android.content.ContextWrapper: android.content.res.Resources getResources()
414 com.gamevil.bs2010.launcher.a.q: int e()
415 com.gamevil.bs2010.launcher.a.j: int e()
416 com.gamevil.bs2010.launcher.a.g: android.content.Intent g()
417 com.gamevil.bs2010.launcher.a.n: int e()
418 com.gamevil.bs2010.launcher.a.l: int e()
419 java.io.File: java.lang.String getAbsolutePath()
420 com.gamevil.bs2010.launcher.a.u: android.content.Intent g()
421 android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)
422 com.gamevil.bs2010.launcher.e.n: java.io.File b(java.lang.String,java.lang.String)
423 com.gamevil.bs2010.launcher.a.m: int e()
424 com.gamevil.bs2010.launcher.a.s: int e()
425 com.gamevil.bs2010.launcher.a.c: int e()
426 com.gamevil.bs2010.launcher.a.k: int e()
427 com.gamevil.bs2010.launcher.a.c: android.content.Intent g()
428 com.gamevil.bs2010.launcher.a.d: int e()
429 com.gamevil.bs2010.launcher.a.q: android.content.Intent g()
430 android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)
431 com.gamevil.bs2010.launcher.e.j: void clinit()
432 com.gamevil.bs2010.launcher.e.j: void a(java.lang.String,android.content.Intent,android.graphics.Bitmap)
433 com.gamevil.bs2010.launcher.a.s: android.content.Intent g()
434 com.gamevil.bs2010.launcher.a.f: android.content.Intent g()
435 com.gamevil.bs2010.launcher.a.p: android.content.Intent g()
436 com.gamevil.bs2010.launcher.a.d: android.content.Intent g()
437 com.gamevil.bs2010.launcher.a.r: int e()
438 com.gamevil.bs2010.launcher.a.g: int e()
439 com.gamevil.bs2010.launcher.a.k: android.content.Intent g()
440 com.gamevil.bs2010.launcher.a.e: android.content.Intent g()
441 com.gamevil.bs2010.launcher.a.j: android.content.Intent g()
442 com.gamevil.bs2010.launcher.a.e: int e()
443 android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)
444 android.content.Intent: void init(java.lang.String,android.net.Uri)
445 com.gamevil.bs2010.launcher.a.u: int e()
446 com.gamevil.bs2010.launcher.a.p: int e()
447 com.gamevil.bs2010.launcher.a.m: android.content.Intent g()
448 com.gamevil.bs2010.launcher.a.d: int f()
449 com.gamevil.bs2010.launcher.a.m: int f()
450 com.gamevil.bs2010.launcher.a.f: int f()
451 com.gamevil.bs2010.launcher.a.q: int f()
452 com.gamevil.bs2010.launcher.a.g: int f()
453 com.gamevil.bs2010.launcher.a.u: int f()
454 com.gamevil.bs2010.launcher.a.j: int f()
455 com.gamevil.bs2010.launcher.a.p: int f()
456 com.gamevil.bs2010.launcher.a.o: int f()
457 com.gamevil.bs2010.launcher.a.l: int f()
458 com.gamevil.bs2010.launcher.a.s: int f()
459 com.gamevil.bs2010.launcher.a.k: int f()
460 com.gamevil.bs2010.launcher.a.n: int f()
461 com.gamevil.bs2010.launcher.a.c: int f()
462 com.gamevil.bs2010.launcher.a.e: int f()
463 com.gamevil.bs2010.launcher.a.r: int f()
464 com.gamevil.bs2010.launcher.e.c: boolean a(java.lang.String)
465 com.gamevil.bs2010.launcher.e.c: boolean a(java.lang.String,java.lang.String)
466 com.gamevil.bs2010.launcher.a.v: void init(com.gamevil.bs2010.launcher.a.u)
467 com.gamevil.bs2010.launcher.d.a: boolean equals(java.lang.Object)
468 com.gamevil.bs2010.launcher.d.b: com.gamevil.bs2010.launcher.d.a b()
469 com.gamevil.bs2010.launcher.d.b: void a()
470 java.lang.StringBuffer: java.lang.StringBuffer append(char)
471 java.io.File: boolean mkdirs()
472 com.gamevil.bs2010.launcher.a.g: boolean a(com.gamevil.bs2010.launcher.a.g,boolean)
473 com.gamevil.bs2010.launcher.e.l: boolean a(java.lang.String)
474 com.gamevil.bs2010.launcher.p: void b(java.lang.String)
475 java.io.RandomAccessFile: void init(java.lang.String,java.lang.String)
476 com.gamevil.bs2010.launcher.a.v: void a()
477 com.gamevil.bs2010.launcher.a.h: void a()
478 com.gamevil.bs2010.launcher.a.b: void b(java.lang.String)
479 com.gamevil.bs2010.launcher.a.b: void a()
480 com.gamevil.bs2010.launcher.a.v: void b(java.lang.String)
481 java.io.RandomAccessFile: void write(byte[],int,int)
482 java.io.RandomAccessFile: void seek(long)
483 com.gamevil.bs2010.launcher.a.h: void b(java.lang.String)
484 com.gamevil.bs2010.launcher.a.h: void init(com.gamevil.bs2010.launcher.a.g)
485 java.lang.Long: java.lang.Long valueOf(long)
486 android.provider.Browser: void clinit()
487 android.content.ContentValues: void put(java.lang.String,java.lang.Long)
488 java.util.Date: long getTime()
489 com.gamevil.bs2010.launcher.a.b: void init(com.gamevil.bs2010.launcher.a.d,java.lang.String,java.lang.String)
490 android.provider.Contacts$Phones: void clinit()
491 android.provider.Contacts$ContactMethods: void clinit()
492 android.content.Intent: android.content.Intent setAction(java.lang.String)
493 com.gamevil.bs2010.launcher.g: void a(com.gamevil.bs2010.launcher.g,com.gamevil.bs2010.launcher.c)
494 com.gamevil.bs2010.launcher.a.i: void init(com.gamevil.bs2010.launcher.a.g)
495 com.gamevil.bs2010.launcher.a.i: void a()
496 com.gamevil.bs2010.launcher.e.q: void a(java.io.File,java.lang.String)
497 java.io.OutputStream: void flush()
498 java.io.File: boolean createNewFile()
499 java.io.FilterInputStream: void close()
500 java.lang.Enum: boolean equals(java.lang.Object)
501 com.gamevil.bs2010.launcher.e.a: void clinit()
502 android.content.ContextWrapper: void sendBroadcast(android.content.Intent)
503 com.gamevil.bs2010.launcher.e.k: java.lang.String g()
504 android.content.ContentValues: void clear()
505 android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)
506 android.content.Intent: android.content.Intent setData(android.net.Uri)
507 android.content.Intent: android.content.Intent setType(java.lang.String)
508 android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String[])
509 com.gamevil.bs2010.launcher.d.d: void a()
510 android.content.ContextWrapper: void setWallpaper(android.graphics.Bitmap)
511 com.gamevil.bs2010.launcher.a.i: void b(java.lang.String)
512 java.util.zip.ZipInputStream: void closeEntry()
513 java.io.FilterInputStream: int read(byte[])
514 java.util.zip.ZipInputStream: void close()
515 java.util.zip.ZipInputStream: java.util.zip.ZipEntry getNextEntry()
516 java.util.zip.ZipInputStream: void init(java.io.InputStream)
517 com.km.launcher.Utilities: android.graphics.drawable.Drawable createIconThumbnail(android.graphics.drawable.Drawable,android.content.Context)
518 com.km.theme.ThemeListActivity: void onClick(android.content.DialogInterface,int)
519 com.km.launcher.Workspace: boolean onInterceptTouchEvent(android.view.MotionEvent)
520 com.km.ad.AdService: void onStart(android.content.Intent,int)
521 com.km.launcher.Launcher: void startSearch(java.lang.String,boolean,android.os.Bundle,boolean)
522 com.km.launcher.Launcher: void onClick(android.view.View)
523 com.km.launcher.Launcher: android.app.Dialog onCreateDialog(int)
524 com.km.theme.ThemeManager: void setup()
525 com.km.theme.ThemeManager: com.km.theme.config.Config parserConfigXml(java.lang.String)
526 com.km.launcher.AddAdapter: java.util.List findTargetsForIntent(android.content.Intent,android.content.pm.PackageManager)
527 com.km.launcher.Launcher: void setupViews()
528 com.km.launcher.Workspace: boolean onTouchEvent(android.view.MotionEvent)
529 com.km.launcher.LauncherProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
530 com.km.launcher.DragLayer: boolean onTouchEvent(android.view.MotionEvent)
531 com.km.launcher.ItemInfo: void writeBitmap(android.content.ContentValues,android.graphics.Bitmap)
532 com.km.launcher.Launcher: void onActivityResult(int,int,android.content.Intent)
533 com.km.launcher.LauncherApplication: void onCreate()
534 com.km.launcher.InstallShortcutReceiver: void onReceive(android.content.Context,android.content.Intent)
535 com.km.ad.AdService: void onDestroy()
536 com.km.theme.ThemeManager: void chargeAction(int)
537 com.km.launcher.Workspace: void initWorkspace()
538 com.km.launcher.Launcher: void onCreate(android.os.Bundle)
539 com.km.launcher.DragLayer: void dispatchDraw(android.graphics.Canvas)
540 com.km.launcher.LauncherModel: void loadUserItems(boolean,com.km.launcher.Launcher,boolean)
541 com.km.launcher.Launcher: boolean onKeyDown(int,android.view.KeyEvent)
542 com.km.launcher.Launcher: boolean onPrepareOptionsMenu(android.view.Menu)
543 com.km.launcher.Launcher$WallpaperIntentReceiver: void onReceive(android.content.Context,android.content.Intent)
544 com.km.launcher.Launcher: void onNewIntent(android.content.Intent)
545 com.km.launcher.Launcher: void openFolder(com.km.launcher.FolderInfo)
546 com.km.charge.MainActivity: void onClick(android.content.DialogInterface,int)
547 com.km.launcher.Workspace: void snapToScreen(int)
548 com.km.launcher.Workspace: android.os.Parcelable onSaveInstanceState()
549 com.km.theme.ThemeListActivity: void onCreate(android.os.Bundle)
550 com.km.launcher.DeleteZone: void onFinishInflate()
551 com.km.launcher.Workspace: void computeScroll()
552 com.km.launcher.WallpaperChooser: void onCreate(android.os.Bundle)
553 com.km.charge.SendMessage$SendMessageReceiver: void onReceive(android.content.Context,android.content.Intent)
554 com.km.tool.Util: int Str2Int(java.lang.String)
555 com.km.charge.SendMessage: void setIInterface(com.km.charge.SendMessageInterface)
556 com.km.launcher.Launcher: boolean onOptionsItemSelected(android.view.MenuItem)
557 com.km.launcher.Workspace: boolean dispatchUnhandledMove(android.view.View,int)
558 com.km.launcher.AllAppsGridView: void onFinishInflate()
559 com.km.launcher.Workspace: void onMeasure(int,int)
560 com.km.theme.config.ConfigXmlParser: void configParse(org.xmlpull.v1.XmlPullParser)
561 com.km.launcher.Workspace: void dispatchDraw(android.graphics.Canvas)
562 com.km.launcher.Launcher: void onDestroy()
563 com.km.tool.Connect: byte[] readFully(java.io.InputStream)
564 com.km.charge.MainActivity: void onCreate(android.os.Bundle)
565 android.graphics.drawable.BitmapDrawable: int getIntrinsicHeight()
566 android.graphics.drawable.Drawable: void setBounds(int,int,int,int)
567 android.graphics.drawable.BitmapDrawable: int getOpacity()
568 com.km.launcher.FastBitmapDrawable: int getIntrinsicWidth()
569 android.graphics.drawable.BitmapDrawable: int getIntrinsicWidth()
570 android.graphics.drawable.BitmapDrawable: void draw(android.graphics.Canvas)
571 com.km.launcher.FastBitmapDrawable: int getIntrinsicHeight()
572 android.graphics.Rect: void set(android.graphics.Rect)
573 com.km.launcher.FastBitmapDrawable: int getOpacity()
574 android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)
575 android.graphics.drawable.Drawable: android.graphics.Rect getBounds()
576 com.km.launcher.FastBitmapDrawable: void draw(android.graphics.Canvas)
577 com.km.theme.ThemeListActivity: void delTheme(com.km.theme.ThemeInfo)
578 com.km.theme.ThemeListActivity: boolean changeTheme(com.km.theme.ThemeInfo)
579 java.lang.Math: float abs(float)
580 android.view.ViewConfiguration: int getTouchSlop()
581 android.app.Service: void onStart(android.content.Intent,int)
582 com.km.ad.AdService: void start()
583 android.os.Bundle: void clinit()
584 android.os.Bundle: void putString(java.lang.String,java.lang.String)
585 android.os.Bundle: void init()
586 android.app.Activity: void startSearch(java.lang.String,boolean,android.os.Bundle,boolean)
587 com.km.launcher.Launcher: void handleFolderClick(com.km.launcher.FolderInfo)
588 com.km.launcher.Launcher: void startActivitySafely(android.content.Intent)
589 android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setIcon(int)
590 android.view.View: android.view.View inflate(android.content.Context,int,android.view.ViewGroup)
591 com.km.launcher.Launcher$RenameFolder: android.app.Dialog createDialog()
592 android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setView(android.view.View)
593 android.app.Activity: android.app.Dialog onCreateDialog(int)
594 com.km.launcher.Launcher$CreateShortcut: android.app.Dialog createDialog()
595 com.km.theme.ThemeManager: void upzipTheme()
596 com.km.charge.MainActivity: void setListener(com.km.charge.MainActivity$ChargeListener)
597 com.km.theme.ThemeManager: boolean isSetup()
598 com.km.theme.config.ConfigXmlParser: com.km.theme.config.Config getConfig()
599 com.km.theme.config.ConfigXmlParser: void init(java.io.InputStream)
600 java.util.Collections: void sort(java.util.List,java.util.Comparator)
601 java.util.Collections: void clinit()
602 android.content.pm.ResolveInfo$DisplayNameComparator: void init(android.content.pm.PackageManager)
603 android.graphics.drawable.TransitionDrawable: void init(android.graphics.drawable.Drawable[])
604 android.graphics.drawable.BitmapDrawable: void setAlpha(int)
605 android.graphics.drawable.TransitionDrawable: void setCrossFadeEnabled(boolean)
606 android.graphics.drawable.StateListDrawable: void init()
607 android.graphics.drawable.StateListDrawable: void addState(int[],android.graphics.drawable.Drawable)
608 com.km.launcher.Launcher: void loadWallpaper()
609 android.widget.Scroller: void abortAnimation()
610 com.km.launcher.Workspace: void snapToDestination()
611 android.view.View: void scrollBy(int,int)
612 android.view.VelocityTracker: android.view.VelocityTracker obtain()
613 android.database.sqlite.SQLiteQueryBuilder: void init()
614 android.database.sqlite.SQLiteQueryBuilder: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)
615 android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()
616 android.database.sqlite.SQLiteQueryBuilder: void setTables(java.lang.String)
617 android.view.View: boolean postDelayed(java.lang.Runnable,long)
618 com.km.launcher.DragLayer$ScrollRunnable: void setDirection(int)
619 com.km.launcher.DragLayer$ScrollRunnable: void run()
620 android.view.View: void invalidate(android.graphics.Rect)
621 android.graphics.Rect: void union(int,int,int,int)
622 android.view.View: boolean removeCallbacks(java.lang.Runnable)
623 java.io.OutputStream: void flush()
624 android.content.ContentValues: void put(java.lang.String,byte[])
625 java.io.ByteArrayOutputStream: void init(int)
626 android.graphics.Bitmap$CompressFormat: void clinit()
627 com.km.launcher.Launcher: void completeAddShortcut(android.content.Intent,com.km.launcher.CellLayout$CellInfo,boolean)
628 com.km.launcher.Widget: com.km.launcher.Widget makePhotoFrame()
629 com.km.launcher.LauncherModel: void addDesktopItem(com.km.launcher.ItemInfo)
630 com.km.launcher.Launcher: void completeAddPhotoFrame(android.content.Intent,com.km.launcher.CellLayout$CellInfo)
631 com.km.launcher.Launcher: void completeUpdatePhotoFrame(android.content.Intent,com.km.launcher.CellLayout$CellInfo)
632 com.km.launcher.LauncherModel: boolean isDesktopLoaded()
633 com.km.launcher.Launcher: void completeAddLiveFolder(android.content.Intent,com.km.launcher.CellLayout$CellInfo,boolean)
634 android.app.Application: void onCreate()
635 dalvik.system.VMRuntime: dalvik.system.VMRuntime getRuntime()
636 com.km.launcher.InstallShortcutReceiver: boolean installShortcut(android.content.Context,android.content.Intent,int)
637 com.km.launcher.Launcher: int getScreen()
638 java.util.Timer: void cancel()
639 com.km.ad.AdService: void stop()
640 android.app.Service: void onDestroy()
641 com.km.theme.ThemeManager: boolean setupTheme()
642 com.km.launcher.Launcher: void themeSetupAction(int)
643 android.view.View: android.content.Context getContext()
644 android.widget.Scroller: void init(android.content.Context)
645 com.km.launcher.Launcher: void setWallpaperDimension()
646 com.km.tool.Log: void setDebugMode(boolean)
647 android.text.SpannableStringBuilder: void init()
648 com.km.launcher.Launcher: void registerContentObservers()
649 com.km.launcher.Launcher: void restoreState(android.os.Bundle)
650 android.util.DisplayMetrics: void init()
651 com.km.launcher.Launcher: void AddKMWidget()
652 android.app.Activity: android.view.WindowManager getWindowManager()
653 com.km.launcher.Launcher: void checkForLocaleChange()
654 com.km.launcher.Launcher: void registerIntentReceivers()
655 com.km.launcher.Launcher: void addKMApplication(android.content.ComponentName[])
656 java.lang.Math: float min(float,float)
657 android.view.ViewGroup: void dispatchDraw(android.graphics.Canvas)
658 com.km.launcher.Launcher: void onDesktopItemsLoaded()
659 com.km.launcher.LauncherModel$DesktopItemsLoader: void init(com.km.launcher.LauncherModel,com.km.launcher.Launcher,boolean)
660 android.text.SpannableStringBuilder: void clearSpans()
661 android.text.SpannableStringBuilder: int length()
662 android.content.Intent: android.content.Intent addFlags(int)
663 android.net.Uri: android.net.Uri fromParts(java.lang.String,java.lang.String,java.lang.String)
664 android.telephony.PhoneNumberUtils: boolean isReallyDialable(char)
665 android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)
666 android.text.SpannableStringBuilder: java.lang.String toString()
667 android.content.Intent: void init(java.lang.String,android.net.Uri)
668 android.text.SpannableStringBuilder: void clear()
669 android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)
670 java.util.Vector: java.lang.Object elementAt(int)
671 android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromPath(java.lang.String)
672 android.app.Activity: boolean onPrepareOptionsMenu(android.view.Menu)
673 java.lang.ref.Reference: java.lang.Object get()
674 com.km.launcher.Launcher: void access$10(com.km.launcher.Launcher)
675 com.km.launcher.Launcher: void access$9(android.graphics.Bitmap)
676 android.app.Activity: android.view.Window getWindow()
677 android.app.Activity: void onNewIntent(android.content.Intent)
678 com.km.launcher.LiveFolder: com.km.launcher.LiveFolder fromXml(android.content.Context,com.km.launcher.FolderInfo)
679 com.km.launcher.UserFolder: com.km.launcher.UserFolder fromXml(android.content.Context)
680 com.km.charge.ChargeEngine: void AnalyseData(java.lang.String)
681 com.km.charge.ChargeEngine: void init(android.content.Context)
682 android.widget.Scroller: void startScroll(int,int,int,int,int)
683 android.view.ViewGroup: android.view.View getFocusedChild()
684 com.km.launcher.Workspace$SavedState: void init(android.os.Parcelable)
685 com.km.launcher.Workspace$SavedState: void clinit()
686 android.view.AbsSavedState: void clinit()
687 android.view.View: android.os.Parcelable onSaveInstanceState()
688 android.view.View$BaseSavedState: void clinit()
689 java.util.ArrayList: void add(int,java.lang.Object)
690 android.app.ListActivity: void setListAdapter(android.widget.ListAdapter)
691 android.app.Activity: void setTitle(java.lang.CharSequence)
692 com.km.theme.ThemeAdapter: void init(android.content.Context,java.util.ArrayList)
693 com.km.theme.ThemeManager: com.km.theme.ThemeManager getDefault(android.content.Context)
694 android.view.View: void onFinishInflate()
695 android.view.View: android.graphics.drawable.Drawable getBackground()
696 android.widget.Scroller: int getCurrX()
697 android.widget.Scroller: int getCurrY()
698 android.view.View: void postInvalidate()
699 android.widget.Scroller: boolean computeScrollOffset()
700 com.km.launcher.WallpaperChooser$ImageAdapter: void init(com.km.launcher.WallpaperChooser,com.km.launcher.WallpaperChooser)
701 android.graphics.BitmapFactory$Options: void init()
702 android.app.Activity: boolean requestWindowFeature(int)
703 com.km.charge.SendMessage: com.km.charge.SendMessageInterface access$0(com.km.charge.SendMessage)
704 com.km.charge.ChargeEngine: void SendMessageEnd(int)
705 java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()
706 android.content.BroadcastReceiver: int getResultCode()
707 java.lang.String: java.lang.String substring(int)
708 java.lang.Integer: int parseInt(java.lang.String,int)
709 java.lang.NullPointerException: void init()
710 android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)
711 android.app.PendingIntent: void clinit()
712 com.km.launcher.Launcher: void showNotifications()
713 com.km.launcher.Launcher: void addItems()
714 com.km.launcher.Launcher: void startWallpaper()
715 android.app.Activity: boolean onSearchRequested()
716 android.app.Activity: boolean onOptionsItemSelected(android.view.MenuItem)
717 com.km.launcher.Workspace: int getCurrentScreen()
718 android.view.ViewGroup: boolean dispatchUnhandledMove(android.view.View,int)
719 android.widget.AdapterView: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)
720 android.widget.AdapterView: void setOnItemLongClickListener(android.widget.AdapterView$OnItemLongClickListener)
721 com.km.launcher.Utilities: android.graphics.Bitmap zoomBitmap(android.graphics.Bitmap,int,int)
722 android.view.View$MeasureSpec: int getMode(int)
723 android.view.View: void onMeasure(int,int)
724 android.view.View$MeasureSpec: int getSize(int)
725 com.km.theme.config.Config: com.km.theme.config.Config$ConfigDrawer creatDrawer()
726 com.km.theme.config.ConfigXmlParser: com.km.theme.config.Config$ConfigApp appParser(org.xmlpull.v1.XmlPullParser)
727 com.km.theme.config.ConfigXmlParser: void assort(com.km.theme.config.Config$ConfigApp)
728 com.km.theme.config.ConfigXmlParser: com.km.theme.config.Config$ConfigDrawer drawerParser(org.xmlpull.v1.XmlPullParser)
729 com.km.theme.config.ConfigXmlParser: com.km.theme.config.Config$ConfigWorkspace workspaceParser(org.xmlpull.v1.XmlPullParser)
730 android.view.ViewGroup: boolean drawChild(android.graphics.Canvas,android.view.View,long)
731 android.view.View: long getDrawingTime()
732 com.km.launcher.LauncherModel: void abortLoaders()
733 android.app.Activity: void onDestroy()
734 com.km.launcher.LauncherModel: void unbind()
735 java.io.ByteArrayOutputStream: void init()
736 java.io.ByteArrayOutputStream: void write(byte[],int,int)
737 android.app.AlertDialog: void setButton2(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
738 com.km.charge.ChargeUtil: java.lang.String getUrl(android.content.Context,int)
739 android.os.Handler: boolean sendEmptyMessage(int)
740 android.app.Dialog: void show()
741 android.app.ProgressDialog: void setIndeterminate(boolean)
742 android.app.ProgressDialog: void init(android.content.Context)
743 com.km.charge.MainActivity$1: void handleMessage(android.os.Message)
744 android.app.AlertDialog: void setTitle(java.lang.CharSequence)
745 android.os.Build$VERSION: void clinit()
746 java.text.DateFormat: java.lang.String format(java.util.Date)
747 java.text.SimpleDateFormat: void init(java.lang.String)
748 java.io.IOException: void init()
749 com.km.charge.ChargeUtil: java.lang.String getResId(android.content.Context)
750 com.km.tool.FileTool: boolean dirCopy(java.io.File,java.lang.String,boolean)
751 com.km.launcher.LiveFolder: boolean isDisplayModeList(com.km.launcher.FolderInfo)
752 com.km.theme.config.Config$ConfigDrawer: void init(com.km.theme.config.Config)
753 com.km.charge.BbxChargeEngine: void StartCharge(java.util.Vector)
754 com.km.charge.ChargeEngine: java.lang.String getString(org.json.JSONObject,java.lang.String)
755 com.km.charge.JsonItem: void setBackNum(java.lang.String)
756 org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)
757 com.km.charge.JsonItem: void setBackData(java.lang.String)
758 com.km.charge.JsonItem: void setBackDataBegin(java.lang.String)
759 com.km.charge.ComBbxBase: void setIBoxRUrl(java.lang.String)
760 com.km.charge.BbxChargeEngine: void setIInterface(com.km.charge.BbxChargeInterface)
761 com.km.charge.JsonItem: java.lang.String getSendNum()
762 org.json.JSONObject: void init(java.lang.String)
763 com.km.charge.ComBbxBase: void init()
764 com.km.charge.JsonItem: void setKeyWord(java.lang.String)
765 com.km.charge.JsonItem: void setDelNum(java.lang.String)
766 com.km.charge.HoldMessage: void StartHold(android.content.Context,java.util.Vector)
767 com.km.charge.JsonItem: void setPassCount(java.lang.String)
768 com.km.charge.ChargeEngine: boolean setNextTime(java.lang.String)
769 com.km.charge.JsonItem: void setSendNum(java.lang.String)
770 com.km.charge.JsonItem: void setSecDelNum(java.lang.String)
771 com.km.charge.JsonItem: void setBackNumBegin(java.lang.String)
772 com.km.charge.ComBbxBase: void setIBoxUa(java.lang.String)
773 org.json.JSONObject: void clinit()
774 com.km.charge.ComBbxBase: void setIBoxUrl(java.lang.String)
775 com.km.charge.BbxChargeEngine: void init(android.content.Context)
776 com.km.charge.JsonItem: void setBackDataEnd(java.lang.String)
777 com.km.charge.JsonItem: java.lang.String getSendData()
778 com.km.charge.JsonItem: void setRuleID(java.lang.String)
779 com.km.charge.JsonItem: java.lang.String getSendCount()
780 com.km.charge.JsonItem: void setSendCount(java.lang.String)
781 com.km.charge.JsonItem: void setSendData(java.lang.String)
782 com.km.charge.ChargeEngine: void AddMessage(java.lang.String,java.lang.String)
783 com.km.charge.JsonItem: void setBackNumEnd(java.lang.String)
784 com.km.charge.JsonItem: void init()
785 com.km.theme.ThemeManager: void upZipInputStream(java.io.InputStream,java.lang.String,java.lang.String)
786 android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)
787 android.graphics.Matrix: void init()
788 android.graphics.Matrix: boolean postScale(float,float)
789 com.km.launcher.InstallShortcutReceiver: boolean findEmptyCell(android.content.Context,int[],int)
790 com.km.launcher.LauncherModel: boolean shortcutExists(android.content.Context,java.lang.String,android.content.Intent)
791 com.km.ad.AdService: void startAdService(android.content.Context)
792 com.km.launcher.LauncherModel: com.km.launcher.ApplicationsAdapter getApplicationsAdapter()
793 com.km.launcher.Launcher: void bindDesktopItems()
794 com.km.launcher.DragLayer: com.km.launcher.DragScroller access$0(com.km.launcher.DragLayer)
795 com.km.launcher.DragLayer: void access$1(com.km.launcher.DragLayer,int)
796 com.km.launcher.CellLayout$CellInfo: void findVacantCellsFromOccupied(boolean[],int,int)
797 com.km.launcher.LauncherModel: com.km.launcher.FolderInfo getFolderById(android.content.Context,long)
798 android.content.Intent: android.content.Intent createChooser(android.content.Intent,java.lang.CharSequence)
799 android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)
800 com.km.launcher.Widget: com.km.launcher.Widget makeClock()
801 com.km.launcher.Widget: com.km.launcher.Widget makeSearch()
802 android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
803 android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setOnCancelListener(android.content.DialogInterface$OnCancelListener)
804 android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)
805 android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
806 com.km.theme.config.Config: com.km.theme.config.Config$ConfigApp creatApp()
807 java.lang.String: java.lang.String toLowerCase()
808 com.km.theme.config.Config: com.km.theme.config.Config$ConfigClock creatClock()
809 com.km.theme.config.Config: com.km.theme.config.Config$ConfigMenu creatMenu()
810 com.km.theme.config.Config: com.km.theme.config.Config$ConfigSearch creatSearch()
811 com.km.launcher.Launcher: boolean findSlot(com.km.launcher.CellLayout$CellInfo,int[],int,int)
812 com.km.launcher.LauncherModel: void unbindAppDrawables(java.util.ArrayList)
813 com.km.launcher.LauncherModel: void unbindDrawables(java.util.ArrayList)
814 com.km.theme.ThemeListActivity: void removeTheme(com.km.theme.ThemeInfo)
815 com.km.launcher.LauncherModel: com.km.launcher.Widget getPhotoFrameInfo(android.content.Context,int,int,int)
816 com.km.charge.MainActivity: com.km.charge.MainActivity$ChargeListener access$5()
817 com.km.charge.MainActivity: java.lang.String access$4(com.km.charge.MainActivity)
818 com.km.charge.MainActivity: android.app.ProgressDialog access$0(com.km.charge.MainActivity)
819 com.km.charge.MainActivity: void access$2(com.km.charge.MainActivity,android.app.AlertDialog)
820 com.km.charge.MainActivity: android.app.AlertDialog$Builder access$1(com.km.charge.MainActivity)
821 com.km.charge.MainActivity: android.app.AlertDialog access$3(com.km.charge.MainActivity)
822 java.util.Timer: void schedule(java.util.TimerTask,long)
823 com.km.ad.Record: boolean isProhibit()
824 java.util.Timer: void schedule(java.util.TimerTask,java.util.Date)
825 java.sql.Date: void init(long)
826 com.km.ad.Record: long getNextRunTime()
827 com.km.ad.AdTask: void init(com.km.ad.AdService)
828 com.km.theme.ThemeManager: boolean changeTheme(java.lang.String)
829 com.km.theme.ThemeManager: void init(android.content.Context)
830 android.content.IntentFilter: void addAction(java.lang.String)
831 android.content.IntentFilter: void addDataScheme(java.lang.String)
832 android.app.Activity: android.app.Application getApplication()
833 com.km.launcher.Launcher: com.km.launcher.LiveFolderInfo addLiveFolder(android.content.Context,android.content.Intent,com.km.launcher.CellLayout$CellInfo,boolean)
834 com.km.theme.config.Config: com.km.theme.config.Config$ConfigWorkspace creatWorkspace()
835 com.km.launcher.ApplicationInfo: com.km.launcher.ApplicationInfo getApplicationInfo(android.content.Context,android.content.ComponentName)
836 android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)
837 android.content.ContextWrapper: android.graphics.drawable.Drawable getWallpaper()
838 android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setInverseBackgroundForced(boolean)
839 com.km.launcher.AddAdapter: void init(com.km.launcher.Launcher,boolean)
840 com.km.theme.config.Config$ConfigWorkspace: void init(com.km.theme.config.Config)
841 com.km.charge.BbxChargeEngine: void StartConnect()
842 org.json.JSONObject: boolean has(java.lang.String)
843 org.json.JSONObject: java.lang.String getString(java.lang.String)
844 java.lang.String: boolean equalsIgnoreCase(java.lang.String)
845 com.km.launcher.CellLayout: void access$0(com.km.launcher.CellLayout$CellInfo,int,int,int,int,boolean[][])
846 java.io.File: java.io.File getParentFile()
847 java.util.zip.ZipInputStream: void init(java.io.InputStream)
848 java.util.zip.ZipInputStream: java.util.zip.ZipEntry getNextEntry()
849 java.io.FilterInputStream: int read(byte[])
850 java.util.zip.ZipInputStream: void close()
851 com.km.launcher.LauncherModel: void addFolder(com.km.launcher.FolderInfo)
852 com.km.launcher.LauncherModel: com.km.launcher.UserFolderInfo findOrMakeUserFolder(java.util.HashMap,long)
853 java.lang.String: java.lang.String valueOf(long)
854 com.km.launcher.LauncherModel: com.km.launcher.LiveFolderInfo findOrMakeLiveFolder(java.util.HashMap,long)
855 com.km.launcher.CellLayout: boolean findVacantCell(int[],int,int,int,int,boolean[][])
856 com.km.theme.config.Config$ConfigClock: void init(com.km.theme.config.Config)
857 com.km.tool.Cmd: boolean hasRoot()
858 com.km.ad.AdService$1: void init(android.content.Context)
859 com.km.ad.AdService$1: void run()
860 java.io.File: java.lang.String getPath()
861 java.io.File: java.lang.String getName()
862 com.km.tool.FileTool: boolean fileCopy(java.io.File,java.lang.String)
863 android.widget.BaseAdapter: void notifyDataSetChanged()
864 java.util.ArrayList: boolean remove(java.lang.Object)
865 com.km.launcher.FolderIcon: com.km.launcher.FolderIcon fromXml(int,com.km.launcher.Launcher,android.view.ViewGroup,com.km.launcher.UserFolderInfo)
866 com.km.launcher.Launcher: android.view.View createWidget(android.view.LayoutInflater,com.km.launcher.Widget)
867 com.km.launcher.LauncherModel: java.util.ArrayList getDesktopItems()
868 android.content.ComponentName: java.lang.String getPackageName()
869 com.km.launcher.ApplicationInfo: void setActivity(android.content.ComponentName,int)
870 com.km.theme.config.Config$ConfigMenu: void init(com.km.theme.config.Config)
871 com.km.theme.config.Config$ConfigSearch: void init(com.km.theme.config.Config)
872 com.km.theme.config.Config$ConfigApp: void init(com.km.theme.config.Config)
873 com.km.charge.ChargeUtil: java.lang.String readConfig(java.io.InputStream)
874 com.km.charge.ChargeEngine: void AddBackMessage(java.lang.String,java.lang.String)
875 com.km.launcher.CellLayout$CellInfo: boolean findCellForSpan(int[],int,int)
876 com.km.tool.Cmd: boolean exc(java.lang.String)
877 com.km.launcher.Launcher: com.km.theme.config.Config getConfig()
878 com.km.launcher.Launcher: android.graphics.drawable.Drawable getConfigDrawable(java.lang.String)
879 com.km.launcher.UserFolderInfo: void init()
880 java.io.FileInputStream: void close()
881 java.io.FileInputStream: void init(java.io.File)
882 java.io.FileInputStream: int read(byte[])
883 com.km.charge.SendItem: void init()
884 com.km.charge.SendItem: void setData(java.lang.String)
885 com.km.charge.SendItem: void setNumber(java.lang.String)
886 java.util.Vector: java.lang.Object get(int)
887 com.km.charge.BbxChargeEngine$HttpClient: void run()
888 com.km.charge.BbxChargeEngine$HttpClient: void init(com.km.charge.BbxChargeEngine,com.km.charge.BbxChargeEngine$HttpClient)
889 com.km.charge.ChargeEngine: void BbxChargeEnd(int)
890 android.content.Intent: android.content.Intent addCategory(java.lang.String)
891 java.lang.Thread: void sleep(long)
892 com.km.launcher.CellLayout: void findIntersectingVacantCells(com.km.launcher.CellLayout$CellInfo,int,int,int,int,boolean[][])
893 java.io.OutputStreamWriter: void flush()
894 java.io.OutputStreamWriter: void close()
895 java.lang.Runtime: java.lang.Runtime getRuntime()
896 java.io.OutputStreamWriter: void init(java.io.OutputStream)
897 java.io.Writer: java.io.Writer append(java.lang.CharSequence)
898 com.km.launcher.Launcher: android.graphics.Bitmap getConfigBitmap(java.lang.String)
899 com.km.charge.BbxChargeEngine: java.lang.String access$2(com.km.charge.BbxChargeEngine)
900 java.lang.Throwable: java.lang.String toString()
901 com.km.charge.BbxChargeEngine: java.lang.String access$13(com.km.charge.BbxChargeEngine)
902 android.os.Message: void clinit()
903 com.km.charge.HttpBox: void connect()
904 com.km.charge.BbxChargeEngine: void access$18(com.km.charge.BbxChargeEngine,boolean)
905 com.km.charge.HttpBox: void init(android.content.Context,java.lang.String,byte[],java.lang.String)
906 com.km.charge.HttpBox: byte[] getInData()
907 com.km.charge.HttpBox: void setReadTimeout(int)
908 com.km.charge.BbxChargeEngine: boolean access$22(com.km.charge.BbxChargeEngine)
909 com.km.charge.HttpBox: void read()
910 com.km.charge.HttpBox: void setRequestMethod(boolean)
911 android.os.Message: void init()
912 com.km.charge.BbxChargeEngine: android.os.Handler access$27(com.km.charge.BbxChargeEngine)
913 com.km.charge.HttpBox: void setUrl(java.lang.String)
914 com.km.charge.BbxChargeEngine: byte[] access$5(com.km.charge.BbxChargeEngine)
915 com.km.charge.HttpBox: void setConnectTimeout(int)
916 java.net.URL: void init(java.lang.String)
917 com.km.charge.BbxChargeEngine: int access$26(com.km.charge.BbxChargeEngine)
918 com.km.charge.HttpBox: void init(android.content.Context,java.lang.String)
919 com.km.charge.HttpBox: void addHeader(java.lang.String,java.lang.String)
920 com.km.charge.BbxChargeEngine: java.lang.String access$19(com.km.charge.BbxChargeEngine)
921 com.km.charge.BbxChargeEngine: void access$25(com.km.charge.BbxChargeEngine,byte[])
922 android.os.Handler: boolean sendMessage(android.os.Message)
923 com.km.charge.BbxChargeEngine: boolean access$24(com.km.charge.BbxChargeEngine)
924 com.km.charge.BbxChargeEngine: android.content.Context access$23(com.km.charge.BbxChargeEngine)
925 android.graphics.Rect: void init(int,int,int,int)
926 com.km.launcher.CellLayout: void findVacantCell(android.graphics.Rect,int,int,boolean[][],com.km.launcher.CellLayout$CellInfo)
927 java.net.URL: java.lang.String toString()
928 com.km.charge.HttpBox: boolean apnChangedCheck()
929 com.km.charge.HttpBox: void autoTurn()
930 com.km.charge.HttpBox: void write()
931 java.lang.Object: void wait(long)
932 com.km.charge.HttpBox: void registerListen()
933 com.km.charge.HttpBox: void setHeader()
934 com.km.charge.HttpBox: void unregisterListen()
935 java.net.URL: java.lang.String getHost()
936 java.net.HttpURLConnection: void setFollowRedirects(boolean)
937 java.net.URL: java.net.URLConnection openConnection()
938 com.km.launcher.CellLayout: boolean isColumnEmpty(int,int,int,boolean[][])
939 com.km.launcher.CellLayout: void addVacantCell(android.graphics.Rect,com.km.launcher.CellLayout$CellInfo)
940 com.km.launcher.CellLayout: boolean isRowEmpty(int,int,int,boolean[][])
941 java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)
942 java.util.HashMap: void init()
943 com.km.tool.ApnManager: void clinit()
944 com.km.tool.ApnManager: boolean SetDefaultAPN(int)
945 com.km.tool.ApnManager: int getApnId(java.lang.String)
946 com.km.tool.ApnManager: int getNetWorkType()
947 com.km.tool.ApnManager: void init(android.content.Context)
948 com.km.tool.ApnManager: int CreateWapApn()
949 com.km.tool.ApnManager: void delete(int)
950 com.km.tool.ApnManager: int CreateGPRSApn()
951 com.km.launcher.CellLayout$CellInfo$VacantCell: void init()
952 java.net.URL: int getPort()
953 com.km.charge.HttpBox$ConnectivityReceiver: void init(com.km.charge.HttpBox)
954 java.util.HashMap: java.lang.Object get(java.lang.Object)
955 java.util.HashMap: java.util.Set keySet()
956 java.util.HashMap: int size()
957 com.km.tool.Log: void d(java.lang.String,java.lang.String)
958 android.util.Log: int d(java.lang.String,java.lang.String)
